---
- hosts: tag_group_web
  gather_facts: true
  become_method: sudo
  become_user: root
  serial: 1
  
  tasks:
    - name: Disable the server in haproxy
      haproxy:
        state: disabled
        backend: sampleapp
        host: "{{ inventory_hostname }}"
        socket: /var/lib/haproxy/stats
      delegate_to: "{{ item }}"
      with_items: "{{ groups.tag_group_loadbalancer }}"
      become: true

    - name: Stop webserver
      service:
        name: httpd
        state: stopped
      become: true

    - name: Remove old deployment
      file:
        path: /var/www/html
        state: absent
      become: true
        
    - name: Create directory
      file:
        path: /var/www/html
        state: directory
        mode: 0755
      become: true

    - name: Download and deploy software
      unarchive:
        remote_src: True
        src: "{{ build_location | regex_replace(scm_rev,old_rev) }}"
        dest: /var/www/html
      become: true

    - name: Add revision marker
      copy:
        dest: /var/www/html/.scm_rev
        mode: 0644
        owner: root
        group: root
        content: "{{ scm_rev }}"
      become: true
      when: scm_rev is defined

    - name: Start webserver
      service:
        name: httpd
        state: started
      become: true

    - name: Perform basic sanity check
      uri:
        url: "http://{{ ansible_host }}"
        return_content: True

    - name: Enable the server in haproxy
      haproxy:
        state: enabled
        backend: sampleapp
        host: "{{ inventory_hostname }}"
        socket: /var/lib/haproxy/stats
      delegate_to: "{{ item }}"
      with_items: "{{ groups.tag_group_loadbalancer }}"
      become: true
